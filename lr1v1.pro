/*				Новый дом.
	Недалеко от нашей школы строился четырехквартирный дом. Когда строительство 
было закончено и жильцы въехали в дом, у подъезда был вывешен список жильцов. Таким 
образом, мы узнали, что в доме живут Воронов, Павлов, Журавлев и Синицын. 
Учительница сказала нам, что один из них – математик, другой – художник, третий –
писатель, а четвертый – баянист. Но у кого какая фамилия она не знала. Мы решили это 
выяснить, и в течение следующей недели нам удалось выяснить следующее.
	Ни Воронов, ни Журавлев не умеют играть на баяне. Воронов незнаком с 
Журавлевым. Писатель и художник в воскресенье уезжают на дачу к Павлову. Писатель 
собирается писать очерк о Синицыне и Воронове. По этим скудным сведениям Холмс 
вычислил, кто есть кто. Что же он узнал?
*/
DOMAINS
  имя = воронов; павлов; журавлев; синицын
  профессия = математик;художник;писатель;баянист
  профессии = профессия*
  логический = да;нет
  
  структура_гипотезы = кто_есть_кто(имя, профессия); знакомы(имя, имя, логический)
  гипотеза = структура_гипотезы*
PREDICATES
  nondeterm входит_в(структура_гипотезы, гипотеза)
  nondeterm входит_в(профессия, профессии)
  nondeterm без_повторов(профессии)
  
  nondeterm возможный_логический(логический)
  
  nondeterm генерация_гипотезы(гипотеза)
  nondeterm проверка_гипотезы(гипотеза)
  nondeterm условие(integer, гипотеза)
  
  nondeterm знакомы(имя, имя, гипотеза) % считаем что знакомы если нет информации об обратном
  nondeterm не_знакомы(имя, имя, гипотеза)
  
CLAUSES
    входит_в(ПервыйЭлемент, [ПервыйЭлемент|_ОстальныеЭлементы]). 
    входит_в(ПервыйЭлемент, [_ПервыйЭлемент|ОстальныеЭлементы]):- 
       входит_в(ПервыйЭлемент, ОстальныеЭлементы).
       
    без_повторов([]).
    без_повторов([Первый|Остальные]):-
      NOT(входит_в(Первый, Остальные)),
      без_повторов(Остальные).
      
    возможный_логический(да).
    возможный_логический(нет).
    
    не_знакомы(А, Б, Гипотеза):-
      входит_в(знакомы(А, Б, нет), Гипотеза);
      входит_в(знакомы(Б, А, нет), Гипотеза).
      
    знакомы(А, Б, Гипотеза):-
      NOT(не_знакомы(А, Б, Гипотеза)).
    
% Ни Воронов, ни Журавлев не умеют играть на баяне. 
    условие(1, Гипотеза):-
       NOT(входит_в(кто_есть_кто(воронов, баянист), Гипотеза)),
       NOT(входит_в(кто_есть_кто(журавлев, баянист), Гипотеза)).
       
% Воронов незнаком с Журавлевым. 
      условие(2, Гипотеза):-
         не_знакомы(воронов, журавлев, Гипотеза).
         
% Писатель и художник в воскресенье уезжают на дачу кПавлову. 
     условие(3, Гипотеза):-
       входит_в(кто_есть_кто(Писатель, писатель), Гипотеза),
       входит_в(кто_есть_кто(Художник, художник), Гипотеза),
       % если едут - значит не могут быть не знакомы
       знакомы(Писатель, Художник, Гипотеза),
       знакомы(Писатель, павлов, Гипотеза),
       знакомы(Художник, павлов, Гипотеза).
       
% Писатель собирается писать очерк о Синицыне и Воронове. 
условие(4, Гипотеза):-
       входит_в(кто_есть_кто(Писатель, писатель), Гипотеза),
       % писатель знает синицына и воронова
       знакомы(Писатель, синицын, Гипотеза),
       знакомы(Писатель, воронов, Гипотеза).
      
% Генерация гипотезы
генерация_гипотезы(Гипотеза):-
  Все_профессии = [математик,художник,писатель,баянист],
  входит_в(ПрофессияВоронова, Все_профессии),
  входит_в(ПрофессияПавлова, Все_профессии),
  входит_в(ПрофессияЖуравлева, Все_профессии),
  входит_в(ПрофессияСиницына, Все_профессии),
  
  возможный_логический(ЗнакомыЛи),
  
  без_повторов([
    ПрофессияВоронова, ПрофессияПавлова, 
    ПрофессияЖуравлева, ПрофессияСиницына
  ]),

Гипотеза = [
  кто_есть_кто(воронов, ПрофессияВоронова),
  кто_есть_кто(павлов, ПрофессияПавлова),
  кто_есть_кто(журавлев, ПрофессияЖуравлева),
  кто_есть_кто(синицын, ПрофессияСиницына),
  знакомы(воронов, журавлев, ЗнакомыЛи)
 ].
% Проверка       
   проверка_гипотезы(Гипотеза):-
      условие(1, Гипотеза),
      условие(2, Гипотеза),
      условие(3, Гипотеза),
      условие(4, Гипотеза).
   
GOAL
  генерация_гипотезы(Гипотеза),
  проверка_гипотезы(Гипотеза).